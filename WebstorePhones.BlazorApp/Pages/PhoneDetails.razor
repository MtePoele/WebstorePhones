@page "/PhoneDetails/{Id:long}"
@using WebstorePhones.Domain.Entities
@using WebstorePhones.Domain.Interfaces
@inject IApiClient<Phone> apiClient

<div>
    @if (@phone == null)
    {
        <Row>
            <Column ColumnSize="ColumnSize.Is6">
                <p>Sorry, there's nothing at this address.</p>
            </Column>
            <Column ColumnSize="ColumnSize.Is6">
                <Button Color="Color.Primary" Type="ButtonType.Link" To="/" Float="Float.End">Back</Button>
            </Column>
        </Row>
    }

    @if (@phone != null)
    {
        <Row>
            <Column ColumnSize="ColumnSize.Is6" TextWeight="TextWeight.Bold">
                <h4>@phone.Brand.BrandName - @phone.Type</h4>
            </Column>
            <Column ColumnSize="ColumnSize.Is6">
                <Button Color="Color.Primary" Type="ButtonType.Link" To="/" Float="Float.End">Back</Button>
            </Column>
        </Row>
        <Row>
            <Column ColumnSize="ColumnSize.Is2">
                <Figure Size="FigureSize.Is128x128">
                    <FigureImage Source="https://blazorise.com/img/empty-256x256.png" AlternateText="empty-256x256" />
                </Figure>
            </Column>
            <Column ColumnSize="ColumnSize.Is4">
                <ListGroup Flush>
                    <ListGroupItem TextWeight="TextWeight.Bold">@Math.Round(phone.PriceWithTax, 2)</ListGroupItem>
                    <ListGroupItem>@GetStockText(phone.Stock)</ListGroupItem>
                </ListGroup>
            </Column>
        </Row>
        <Row>
            <Column>
                @phone.Description
            </Column>
        </Row>
    }

</div>

@code {
    public Phone phone { get; set; }

    [Parameter]
    public long Id { get; set; }
    protected override async Task OnInitializedAsync()
    {
        phone = await apiClient.GetAsync(Id);
    }

    private string GetStockText(int stock)
    {
        switch (stock)
        {
            case > 5:
                return $"{stock} in stock.";
            case > 0:
                return $"Almost out of stock! Only {stock} left!";
            default:
                return "Out of stock.";
        }
    }
}
